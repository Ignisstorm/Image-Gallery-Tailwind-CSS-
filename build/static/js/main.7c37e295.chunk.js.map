{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLA4CeA,EA1CG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACVC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACG,yBAAMC,UAAY,+CACtB,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACf,yBAAKA,UAAU,0CAAf,YACUH,EAAMO,MAEhB,4BACA,4BACA,4BAAQJ,UAAU,kBAAlB,UAGCH,EAAMQ,OAEP,4BACA,4BAAQL,UAAU,iBAAlB,cAGCH,EAAMS,WAEP,4BACA,4BAAQN,UAAU,iBAAlB,UAGCH,EAAMU,SAIP,yBAAKP,UAAU,aACdF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACN,0BAAMC,IAAKD,EAAOV,UAAU,8FAA5B,IACFS,SCPUG,EA1BK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAQlC,OACI,yBAAKhB,UAAU,kDACf,0BAAMiB,SAPO,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAKef,UAAU,mBACpC,yBAAKA,UAAU,gEACf,2BAAOoB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQtB,UAAU,kHAEzDuB,KAAK,OAAOC,YAAY,yBACxB,4BAAQxB,UAAU,0IAGCuB,KAAK,UAHxB,cCkBOE,MA7Bf,WAAgB,IAAD,EACcX,mBAAS,IADvB,mBACPY,EADO,KACCC,EADD,OAEoBb,oBAAS,GAF7B,mBAEPc,EAFO,KAEIC,EAFJ,OAGUf,mBAAS,IAHnB,mBAGPgB,EAHO,KAGDC,EAHC,KAeb,OAVDC,qBAAU,WACTC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACJK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,CAACX,IAGA,yBAAK9B,UAAU,qBACf,kBAAE,EAAF,CAAca,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAC1Ca,GAA+B,IAAlBF,EAAOkB,QAAgB,wBAAI5C,UAAU,sCAAd,mBACrC4B,EAAY,wBAAI5B,UAAU,sCAAd,cAAqE,yBAAKA,UAAU,0BAChG0B,EAAOlB,KAAI,SAAAX,GAAK,OACf,kBAAC,EAAD,CAAWc,IAAKd,EAAMgD,GAAIhD,MAAOA,UCrBvCiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7c37e295.chunk.js","sourcesContent":["import React from 'react'\n\nconst ImageCard = ({image}) => {\n    const tags = image.tags.split(',');\n    return (\n       < div className = \" max-w-sm rounded overflow-hidden shadow-lg\" >\n   <img src={image.webformatURL} alt=\"\" className=\"w-full\"/>\n   <div className=\"px-6 py-4\">\n   <div className=\"font-bold text-purple-500 text-xl mb-2\">\n   Photo by {image.user}\n   </div>\n   <ul>\n   <li>\n   <strong className=\"text-green-400\">\n   Views: \n   </strong>\n   {image.views}\n   </li>\n   <li>\n   <strong className=\"text-blue-400\">\n   Downloads:\n   </strong>\n   {image.downloads}\n   </li>\n   <li>\n   <strong className=\"text-pink-400\">\n   Likes: \n   </strong>\n   {image.likes}\n   </li>\n   </ul>\n   </div>\n   <div className=\"px-6 py-4\">\n   {tags.map((tag, index) => (\n       <span key={index} className=\"inline-block bg-indigo-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-800 mr-2\">\n   #{tag}\n   </span>\n   ))}\n   \n   </div>\n    </div>\n    )\n}\n\nexport default ImageCard;\n","import React, {useState} from 'react';\n\nconst ImageSearch = ({searchText}) => {\n    const [text, setText] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        searchText(text);\n    }\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\n        <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n        <div className=\"flex items-center border-b border-b-2 border-indigo-500 py-2\">\n        <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full\n        text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n        type=\"text\" placeholder=\"Search Image Term...\"/>\n        <button className=\"flex-shrink-0 bg-indigo-500 hover:bg-indigo-700 border-indigo-500\n        hover:border-indigo-700\n         text-sm border-4 text-white\n        py-1 px-2 rounded\" type=\"submit\">Search\n        </button>\n        </div>\n        </form>\n        </div>\n    )\n}\n\nexport default ImageSearch;\n","import React, {useState, useEffect} from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\n\n\nfunction App() {\n const [images, setImages] = useState([]);\n const [isLoading, setIsLoading] = useState(true);\n const [term, setTerm] = useState('');\n\n useEffect(() => {\n  fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n  .then(res => res.json())\n  .then(data => {\n    setImages(data.hits);\n    setIsLoading(false);\n  })\n  .catch(err => console.log(err));\n },[term]);\n\n  return (\n    <div className=\"container mx-auto\">\n    < ImageSearch searchText={(text) => setTerm(text)} / >\n    {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1>}\n    {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> : <div className=\"grid grid-cols-3 gap-4\">\n    {images.map(image => (\n      <ImageCard key={image.id} image={image}/>\n  ))}\n    </div>}\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}